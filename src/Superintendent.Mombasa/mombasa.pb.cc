// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mombasa.proto

#include "mombasa.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace mombasa {
constexpr CallRequest::CallRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : args_()
  , functionpointer_(uint64_t{0u})
  , returnsfloat_(false){}
struct CallRequestDefaultTypeInternal {
  constexpr CallRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CallRequestDefaultTypeInternal() {}
  union {
    CallRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CallRequestDefaultTypeInternal _CallRequest_default_instance_;
constexpr CallResponse::CallResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : durationmicroseconds_(uint64_t{0u})
  , value_(uint64_t{0u})
  , success_(false){}
struct CallResponseDefaultTypeInternal {
  constexpr CallResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CallResponseDefaultTypeInternal() {}
  union {
    CallResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CallResponseDefaultTypeInternal _CallResponse_default_instance_;
constexpr MemoryWriteRequest::MemoryWriteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , address_(uint64_t{0u}){}
struct MemoryWriteRequestDefaultTypeInternal {
  constexpr MemoryWriteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MemoryWriteRequestDefaultTypeInternal() {}
  union {
    MemoryWriteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MemoryWriteRequestDefaultTypeInternal _MemoryWriteRequest_default_instance_;
constexpr MemoryWriteResponse::MemoryWriteResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : durationmicroseconds_(uint64_t{0u}){}
struct MemoryWriteResponseDefaultTypeInternal {
  constexpr MemoryWriteResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MemoryWriteResponseDefaultTypeInternal() {}
  union {
    MemoryWriteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MemoryWriteResponseDefaultTypeInternal _MemoryWriteResponse_default_instance_;
constexpr MemoryPollRequest::MemoryPollRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : address_(uint64_t{0u})
  , count_(0u)
  , interval_(0u){}
struct MemoryPollRequestDefaultTypeInternal {
  constexpr MemoryPollRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MemoryPollRequestDefaultTypeInternal() {}
  union {
    MemoryPollRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MemoryPollRequestDefaultTypeInternal _MemoryPollRequest_default_instance_;
constexpr MemoryReadRequest::MemoryReadRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : address_(uint64_t{0u})
  , count_(0u){}
struct MemoryReadRequestDefaultTypeInternal {
  constexpr MemoryReadRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MemoryReadRequestDefaultTypeInternal() {}
  union {
    MemoryReadRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MemoryReadRequestDefaultTypeInternal _MemoryReadRequest_default_instance_;
constexpr MemoryReadResponse::MemoryReadResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , durationmicroseconds_(uint64_t{0u})
  , address_(uint64_t{0u}){}
struct MemoryReadResponseDefaultTypeInternal {
  constexpr MemoryReadResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MemoryReadResponseDefaultTypeInternal() {}
  union {
    MemoryReadResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MemoryReadResponseDefaultTypeInternal _MemoryReadResponse_default_instance_;
constexpr MemoryAllocateRequest::MemoryAllocateRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : length_(0u)
  , protection_(0u){}
struct MemoryAllocateRequestDefaultTypeInternal {
  constexpr MemoryAllocateRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MemoryAllocateRequestDefaultTypeInternal() {}
  union {
    MemoryAllocateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MemoryAllocateRequestDefaultTypeInternal _MemoryAllocateRequest_default_instance_;
constexpr MemoryAllocateResponse::MemoryAllocateResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : durationmicroseconds_(uint64_t{0u})
  , address_(uint64_t{0u}){}
struct MemoryAllocateResponseDefaultTypeInternal {
  constexpr MemoryAllocateResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MemoryAllocateResponseDefaultTypeInternal() {}
  union {
    MemoryAllocateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MemoryAllocateResponseDefaultTypeInternal _MemoryAllocateResponse_default_instance_;
constexpr MemoryFreeRequest::MemoryFreeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : address_(uint64_t{0u})
  , length_(0u)
  , freetype_(0u){}
struct MemoryFreeRequestDefaultTypeInternal {
  constexpr MemoryFreeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MemoryFreeRequestDefaultTypeInternal() {}
  union {
    MemoryFreeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MemoryFreeRequestDefaultTypeInternal _MemoryFreeRequest_default_instance_;
constexpr MemoryFreeResponse::MemoryFreeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : durationmicroseconds_(uint64_t{0u}){}
struct MemoryFreeResponseDefaultTypeInternal {
  constexpr MemoryFreeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MemoryFreeResponseDefaultTypeInternal() {}
  union {
    MemoryFreeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MemoryFreeResponseDefaultTypeInternal _MemoryFreeResponse_default_instance_;
constexpr MemoryProtectRequest::MemoryProtectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : address_(uint64_t{0u})
  , length_(0u)
  , protection_(0u){}
struct MemoryProtectRequestDefaultTypeInternal {
  constexpr MemoryProtectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MemoryProtectRequestDefaultTypeInternal() {}
  union {
    MemoryProtectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MemoryProtectRequestDefaultTypeInternal _MemoryProtectRequest_default_instance_;
constexpr MemoryProtectResponse::MemoryProtectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : durationmicroseconds_(uint64_t{0u}){}
struct MemoryProtectResponseDefaultTypeInternal {
  constexpr MemoryProtectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MemoryProtectResponseDefaultTypeInternal() {}
  union {
    MemoryProtectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MemoryProtectResponseDefaultTypeInternal _MemoryProtectResponse_default_instance_;
constexpr SetTlsValueRequest::SetTlsValueRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(uint64_t{0u})
  , index_(0u){}
struct SetTlsValueRequestDefaultTypeInternal {
  constexpr SetTlsValueRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetTlsValueRequestDefaultTypeInternal() {}
  union {
    SetTlsValueRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetTlsValueRequestDefaultTypeInternal _SetTlsValueRequest_default_instance_;
constexpr SetTlsValueResponse::SetTlsValueResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : durationmicroseconds_(uint64_t{0u}){}
struct SetTlsValueResponseDefaultTypeInternal {
  constexpr SetTlsValueResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetTlsValueResponseDefaultTypeInternal() {}
  union {
    SetTlsValueResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetTlsValueResponseDefaultTypeInternal _SetTlsValueResponse_default_instance_;
constexpr SetThreadLocalPointerRequest::SetThreadLocalPointerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(uint64_t{0u}){}
struct SetThreadLocalPointerRequestDefaultTypeInternal {
  constexpr SetThreadLocalPointerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetThreadLocalPointerRequestDefaultTypeInternal() {}
  union {
    SetThreadLocalPointerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetThreadLocalPointerRequestDefaultTypeInternal _SetThreadLocalPointerRequest_default_instance_;
constexpr SetThreadLocalPointerResponse::SetThreadLocalPointerResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : durationmicroseconds_(uint64_t{0u}){}
struct SetThreadLocalPointerResponseDefaultTypeInternal {
  constexpr SetThreadLocalPointerResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetThreadLocalPointerResponseDefaultTypeInternal() {}
  union {
    SetThreadLocalPointerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetThreadLocalPointerResponseDefaultTypeInternal _SetThreadLocalPointerResponse_default_instance_;
constexpr GetThreadLocalPointerRequest::GetThreadLocalPointerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : why_(uint64_t{0u}){}
struct GetThreadLocalPointerRequestDefaultTypeInternal {
  constexpr GetThreadLocalPointerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetThreadLocalPointerRequestDefaultTypeInternal() {}
  union {
    GetThreadLocalPointerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetThreadLocalPointerRequestDefaultTypeInternal _GetThreadLocalPointerRequest_default_instance_;
constexpr GetThreadLocalPointerResponse::GetThreadLocalPointerResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : durationmicroseconds_(uint64_t{0u})
  , value_(uint64_t{0u}){}
struct GetThreadLocalPointerResponseDefaultTypeInternal {
  constexpr GetThreadLocalPointerResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetThreadLocalPointerResponseDefaultTypeInternal() {}
  union {
    GetThreadLocalPointerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetThreadLocalPointerResponseDefaultTypeInternal _GetThreadLocalPointerResponse_default_instance_;
}  // namespace mombasa
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mombasa_2eproto[19];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mombasa_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mombasa_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mombasa_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::CallRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::CallRequest, functionpointer_),
  PROTOBUF_FIELD_OFFSET(::mombasa::CallRequest, args_),
  PROTOBUF_FIELD_OFFSET(::mombasa::CallRequest, returnsfloat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::CallResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::CallResponse, durationmicroseconds_),
  PROTOBUF_FIELD_OFFSET(::mombasa::CallResponse, success_),
  PROTOBUF_FIELD_OFFSET(::mombasa::CallResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryWriteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryWriteRequest, address_),
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryWriteRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryWriteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryWriteResponse, durationmicroseconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryPollRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryPollRequest, address_),
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryPollRequest, count_),
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryPollRequest, interval_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryReadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryReadRequest, address_),
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryReadRequest, count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryReadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryReadResponse, durationmicroseconds_),
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryReadResponse, address_),
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryReadResponse, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryAllocateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryAllocateRequest, length_),
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryAllocateRequest, protection_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryAllocateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryAllocateResponse, durationmicroseconds_),
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryAllocateResponse, address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryFreeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryFreeRequest, address_),
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryFreeRequest, length_),
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryFreeRequest, freetype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryFreeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryFreeResponse, durationmicroseconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryProtectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryProtectRequest, address_),
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryProtectRequest, length_),
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryProtectRequest, protection_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryProtectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::MemoryProtectResponse, durationmicroseconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::SetTlsValueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::SetTlsValueRequest, index_),
  PROTOBUF_FIELD_OFFSET(::mombasa::SetTlsValueRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::SetTlsValueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::SetTlsValueResponse, durationmicroseconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::SetThreadLocalPointerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::SetThreadLocalPointerRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::SetThreadLocalPointerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::SetThreadLocalPointerResponse, durationmicroseconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::GetThreadLocalPointerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::GetThreadLocalPointerRequest, why_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mombasa::GetThreadLocalPointerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mombasa::GetThreadLocalPointerResponse, durationmicroseconds_),
  PROTOBUF_FIELD_OFFSET(::mombasa::GetThreadLocalPointerResponse, value_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::mombasa::CallRequest)},
  { 9, -1, -1, sizeof(::mombasa::CallResponse)},
  { 18, -1, -1, sizeof(::mombasa::MemoryWriteRequest)},
  { 26, -1, -1, sizeof(::mombasa::MemoryWriteResponse)},
  { 33, -1, -1, sizeof(::mombasa::MemoryPollRequest)},
  { 42, -1, -1, sizeof(::mombasa::MemoryReadRequest)},
  { 50, -1, -1, sizeof(::mombasa::MemoryReadResponse)},
  { 59, -1, -1, sizeof(::mombasa::MemoryAllocateRequest)},
  { 67, -1, -1, sizeof(::mombasa::MemoryAllocateResponse)},
  { 75, -1, -1, sizeof(::mombasa::MemoryFreeRequest)},
  { 84, -1, -1, sizeof(::mombasa::MemoryFreeResponse)},
  { 91, -1, -1, sizeof(::mombasa::MemoryProtectRequest)},
  { 100, -1, -1, sizeof(::mombasa::MemoryProtectResponse)},
  { 107, -1, -1, sizeof(::mombasa::SetTlsValueRequest)},
  { 115, -1, -1, sizeof(::mombasa::SetTlsValueResponse)},
  { 122, -1, -1, sizeof(::mombasa::SetThreadLocalPointerRequest)},
  { 129, -1, -1, sizeof(::mombasa::SetThreadLocalPointerResponse)},
  { 136, -1, -1, sizeof(::mombasa::GetThreadLocalPointerRequest)},
  { 143, -1, -1, sizeof(::mombasa::GetThreadLocalPointerResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_CallRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_CallResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_MemoryWriteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_MemoryWriteResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_MemoryPollRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_MemoryReadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_MemoryReadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_MemoryAllocateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_MemoryAllocateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_MemoryFreeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_MemoryFreeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_MemoryProtectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_MemoryProtectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_SetTlsValueRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_SetTlsValueResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_SetThreadLocalPointerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_SetThreadLocalPointerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_GetThreadLocalPointerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mombasa::_GetThreadLocalPointerResponse_default_instance_),
};

const char descriptor_table_protodef_mombasa_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rmombasa.proto\022\007mombasa\"J\n\013CallRequest\022"
  "\027\n\017functionPointer\030\001 \001(\006\022\014\n\004args\030\002 \003(\006\022\024"
  "\n\014returnsFloat\030\003 \001(\010\"L\n\014CallResponse\022\034\n\024"
  "durationMicroseconds\030\001 \001(\004\022\017\n\007success\030\002 "
  "\001(\010\022\r\n\005value\030\003 \001(\006\"3\n\022MemoryWriteRequest"
  "\022\017\n\007address\030\001 \001(\006\022\014\n\004data\030\002 \001(\014\"3\n\023Memor"
  "yWriteResponse\022\034\n\024durationMicroseconds\030\001"
  " \001(\004\"E\n\021MemoryPollRequest\022\017\n\007address\030\001 \001"
  "(\006\022\r\n\005count\030\002 \001(\r\022\020\n\010interval\030\003 \001(\r\"3\n\021M"
  "emoryReadRequest\022\017\n\007address\030\001 \001(\006\022\r\n\005cou"
  "nt\030\002 \001(\r\"Q\n\022MemoryReadResponse\022\034\n\024durati"
  "onMicroseconds\030\001 \001(\004\022\017\n\007address\030\002 \001(\006\022\014\n"
  "\004data\030\003 \001(\014\";\n\025MemoryAllocateRequest\022\016\n\006"
  "length\030\001 \001(\r\022\022\n\nprotection\030\002 \001(\r\"G\n\026Memo"
  "ryAllocateResponse\022\034\n\024durationMicrosecon"
  "ds\030\001 \001(\004\022\017\n\007address\030\002 \001(\006\"F\n\021MemoryFreeR"
  "equest\022\017\n\007address\030\001 \001(\006\022\016\n\006length\030\002 \001(\r\022"
  "\020\n\010freeType\030\003 \001(\r\"2\n\022MemoryFreeResponse\022"
  "\034\n\024durationMicroseconds\030\001 \001(\004\"K\n\024MemoryP"
  "rotectRequest\022\017\n\007address\030\001 \001(\006\022\016\n\006length"
  "\030\002 \001(\r\022\022\n\nprotection\030\003 \001(\r\"5\n\025MemoryProt"
  "ectResponse\022\034\n\024durationMicroseconds\030\001 \001("
  "\004\"2\n\022SetTlsValueRequest\022\r\n\005index\030\001 \001(\r\022\r"
  "\n\005value\030\002 \001(\006\"3\n\023SetTlsValueResponse\022\034\n\024"
  "durationMicroseconds\030\001 \001(\004\"-\n\034SetThreadL"
  "ocalPointerRequest\022\r\n\005value\030\001 \001(\006\"=\n\035Set"
  "ThreadLocalPointerResponse\022\034\n\024durationMi"
  "croseconds\030\001 \001(\004\"+\n\034GetThreadLocalPointe"
  "rRequest\022\013\n\003why\030\001 \001(\004\"L\n\035GetThreadLocalP"
  "ointerResponse\022\034\n\024durationMicroseconds\030\001"
  " \001(\004\022\r\n\005value\030\002 \001(\0062\252\006\n\rMombasaBridge\022;\n"
  "\014CallFunction\022\024.mombasa.CallRequest\032\025.mo"
  "mbasa.CallResponse\022Q\n\016AllocateMemory\022\036.m"
  "ombasa.MemoryAllocateRequest\032\037.mombasa.M"
  "emoryAllocateResponse\022E\n\nFreeMemory\022\032.mo"
  "mbasa.MemoryFreeRequest\032\033.mombasa.Memory"
  "FreeResponse\022N\n\rProtectMemory\022\035.mombasa."
  "MemoryProtectRequest\032\036.mombasa.MemoryPro"
  "tectResponse\022H\n\013WriteMemory\022\033.mombasa.Me"
  "moryWriteRequest\032\034.mombasa.MemoryWriteRe"
  "sponse\022E\n\nReadMemory\022\032.mombasa.MemoryRea"
  "dRequest\032\033.mombasa.MemoryReadResponse\022G\n"
  "\nPollMemory\022\032.mombasa.MemoryPollRequest\032"
  "\033.mombasa.MemoryReadResponse0\001\022H\n\013SetTls"
  "Value\022\033.mombasa.SetTlsValueRequest\032\034.mom"
  "basa.SetTlsValueResponse\022f\n\025SetThreadLoc"
  "alPointer\022%.mombasa.SetThreadLocalPointe"
  "rRequest\032&.mombasa.SetThreadLocalPointer"
  "Response\022f\n\025GetThreadLocalPointer\022%.momb"
  "asa.GetThreadLocalPointerRequest\032&.momba"
  "sa.GetThreadLocalPointerResponseb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mombasa_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mombasa_2eproto = {
  false, false, 2040, descriptor_table_protodef_mombasa_2eproto, "mombasa.proto", 
  &descriptor_table_mombasa_2eproto_once, nullptr, 0, 19,
  schemas, file_default_instances, TableStruct_mombasa_2eproto::offsets,
  file_level_metadata_mombasa_2eproto, file_level_enum_descriptors_mombasa_2eproto, file_level_service_descriptors_mombasa_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_mombasa_2eproto_getter() {
  return &descriptor_table_mombasa_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_mombasa_2eproto(&descriptor_table_mombasa_2eproto);
namespace mombasa {

// ===================================================================

class CallRequest::_Internal {
 public:
};

CallRequest::CallRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  args_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.CallRequest)
}
CallRequest::CallRequest(const CallRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      args_(from.args_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&functionpointer_, &from.functionpointer_,
    static_cast<size_t>(reinterpret_cast<char*>(&returnsfloat_) -
    reinterpret_cast<char*>(&functionpointer_)) + sizeof(returnsfloat_));
  // @@protoc_insertion_point(copy_constructor:mombasa.CallRequest)
}

void CallRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&functionpointer_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&returnsfloat_) -
    reinterpret_cast<char*>(&functionpointer_)) + sizeof(returnsfloat_));
}

CallRequest::~CallRequest() {
  // @@protoc_insertion_point(destructor:mombasa.CallRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CallRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CallRequest::ArenaDtor(void* object) {
  CallRequest* _this = reinterpret_cast< CallRequest* >(object);
  (void)_this;
}
void CallRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CallRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CallRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.CallRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  ::memset(&functionpointer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&returnsfloat_) -
      reinterpret_cast<char*>(&functionpointer_)) + sizeof(returnsfloat_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CallRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // fixed64 functionPointer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          functionpointer_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else
          goto handle_unusual;
        continue;
      // repeated fixed64 args = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFixed64Parser(_internal_mutable_args(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17) {
          _internal_add_args(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr));
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else
          goto handle_unusual;
        continue;
      // bool returnsFloat = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          returnsfloat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CallRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.CallRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 functionPointer = 1;
  if (this->_internal_functionpointer() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_functionpointer(), target);
  }

  // repeated fixed64 args = 2;
  if (this->_internal_args_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_args(), target);
  }

  // bool returnsFloat = 3;
  if (this->_internal_returnsfloat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_returnsfloat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.CallRequest)
  return target;
}

size_t CallRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.CallRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed64 args = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_args_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // fixed64 functionPointer = 1;
  if (this->_internal_functionpointer() != 0) {
    total_size += 1 + 8;
  }

  // bool returnsFloat = 3;
  if (this->_internal_returnsfloat() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CallRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CallRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CallRequest::GetClassData() const { return &_class_data_; }

void CallRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CallRequest *>(to)->MergeFrom(
      static_cast<const CallRequest &>(from));
}


void CallRequest::MergeFrom(const CallRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.CallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  if (from._internal_functionpointer() != 0) {
    _internal_set_functionpointer(from._internal_functionpointer());
  }
  if (from._internal_returnsfloat() != 0) {
    _internal_set_returnsfloat(from._internal_returnsfloat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CallRequest::CopyFrom(const CallRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.CallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallRequest::IsInitialized() const {
  return true;
}

void CallRequest::InternalSwap(CallRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  args_.InternalSwap(&other->args_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CallRequest, returnsfloat_)
      + sizeof(CallRequest::returnsfloat_)
      - PROTOBUF_FIELD_OFFSET(CallRequest, functionpointer_)>(
          reinterpret_cast<char*>(&functionpointer_),
          reinterpret_cast<char*>(&other->functionpointer_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CallRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[0]);
}

// ===================================================================

class CallResponse::_Internal {
 public:
};

CallResponse::CallResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.CallResponse)
}
CallResponse::CallResponse(const CallResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&durationmicroseconds_, &from.durationmicroseconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&durationmicroseconds_)) + sizeof(success_));
  // @@protoc_insertion_point(copy_constructor:mombasa.CallResponse)
}

void CallResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&durationmicroseconds_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&durationmicroseconds_)) + sizeof(success_));
}

CallResponse::~CallResponse() {
  // @@protoc_insertion_point(destructor:mombasa.CallResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CallResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CallResponse::ArenaDtor(void* object) {
  CallResponse* _this = reinterpret_cast< CallResponse* >(object);
  (void)_this;
}
void CallResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CallResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.CallResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&durationmicroseconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&durationmicroseconds_)) + sizeof(success_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CallResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 durationMicroseconds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          durationmicroseconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // fixed64 value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CallResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.CallResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_durationmicroseconds(), target);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  // fixed64 value = 3;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(3, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.CallResponse)
  return target;
}

size_t CallResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.CallResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_durationmicroseconds());
  }

  // fixed64 value = 3;
  if (this->_internal_value() != 0) {
    total_size += 1 + 8;
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CallResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CallResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CallResponse::GetClassData() const { return &_class_data_; }

void CallResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CallResponse *>(to)->MergeFrom(
      static_cast<const CallResponse &>(from));
}


void CallResponse::MergeFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.CallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_durationmicroseconds() != 0) {
    _internal_set_durationmicroseconds(from._internal_durationmicroseconds());
  }
  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CallResponse::CopyFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.CallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallResponse::IsInitialized() const {
  return true;
}

void CallResponse::InternalSwap(CallResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CallResponse, success_)
      + sizeof(CallResponse::success_)
      - PROTOBUF_FIELD_OFFSET(CallResponse, durationmicroseconds_)>(
          reinterpret_cast<char*>(&durationmicroseconds_),
          reinterpret_cast<char*>(&other->durationmicroseconds_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CallResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[1]);
}

// ===================================================================

class MemoryWriteRequest::_Internal {
 public:
};

MemoryWriteRequest::MemoryWriteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.MemoryWriteRequest)
}
MemoryWriteRequest::MemoryWriteRequest(const MemoryWriteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  address_ = from.address_;
  // @@protoc_insertion_point(copy_constructor:mombasa.MemoryWriteRequest)
}

void MemoryWriteRequest::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
address_ = uint64_t{0u};
}

MemoryWriteRequest::~MemoryWriteRequest() {
  // @@protoc_insertion_point(destructor:mombasa.MemoryWriteRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MemoryWriteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MemoryWriteRequest::ArenaDtor(void* object) {
  MemoryWriteRequest* _this = reinterpret_cast< MemoryWriteRequest* >(object);
  (void)_this;
}
void MemoryWriteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MemoryWriteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MemoryWriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.MemoryWriteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  address_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MemoryWriteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // fixed64 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          address_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else
          goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MemoryWriteRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.MemoryWriteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_address(), target);
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.MemoryWriteRequest)
  return target;
}

size_t MemoryWriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.MemoryWriteRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // fixed64 address = 1;
  if (this->_internal_address() != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MemoryWriteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MemoryWriteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MemoryWriteRequest::GetClassData() const { return &_class_data_; }

void MemoryWriteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MemoryWriteRequest *>(to)->MergeFrom(
      static_cast<const MemoryWriteRequest &>(from));
}


void MemoryWriteRequest::MergeFrom(const MemoryWriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.MemoryWriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from._internal_address() != 0) {
    _internal_set_address(from._internal_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MemoryWriteRequest::CopyFrom(const MemoryWriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.MemoryWriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryWriteRequest::IsInitialized() const {
  return true;
}

void MemoryWriteRequest::InternalSwap(MemoryWriteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  swap(address_, other->address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MemoryWriteRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[2]);
}

// ===================================================================

class MemoryWriteResponse::_Internal {
 public:
};

MemoryWriteResponse::MemoryWriteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.MemoryWriteResponse)
}
MemoryWriteResponse::MemoryWriteResponse(const MemoryWriteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  durationmicroseconds_ = from.durationmicroseconds_;
  // @@protoc_insertion_point(copy_constructor:mombasa.MemoryWriteResponse)
}

void MemoryWriteResponse::SharedCtor() {
durationmicroseconds_ = uint64_t{0u};
}

MemoryWriteResponse::~MemoryWriteResponse() {
  // @@protoc_insertion_point(destructor:mombasa.MemoryWriteResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MemoryWriteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MemoryWriteResponse::ArenaDtor(void* object) {
  MemoryWriteResponse* _this = reinterpret_cast< MemoryWriteResponse* >(object);
  (void)_this;
}
void MemoryWriteResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MemoryWriteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MemoryWriteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.MemoryWriteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  durationmicroseconds_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MemoryWriteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 durationMicroseconds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          durationmicroseconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MemoryWriteResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.MemoryWriteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_durationmicroseconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.MemoryWriteResponse)
  return target;
}

size_t MemoryWriteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.MemoryWriteResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_durationmicroseconds());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MemoryWriteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MemoryWriteResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MemoryWriteResponse::GetClassData() const { return &_class_data_; }

void MemoryWriteResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MemoryWriteResponse *>(to)->MergeFrom(
      static_cast<const MemoryWriteResponse &>(from));
}


void MemoryWriteResponse::MergeFrom(const MemoryWriteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.MemoryWriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_durationmicroseconds() != 0) {
    _internal_set_durationmicroseconds(from._internal_durationmicroseconds());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MemoryWriteResponse::CopyFrom(const MemoryWriteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.MemoryWriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryWriteResponse::IsInitialized() const {
  return true;
}

void MemoryWriteResponse::InternalSwap(MemoryWriteResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(durationmicroseconds_, other->durationmicroseconds_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MemoryWriteResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[3]);
}

// ===================================================================

class MemoryPollRequest::_Internal {
 public:
};

MemoryPollRequest::MemoryPollRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.MemoryPollRequest)
}
MemoryPollRequest::MemoryPollRequest(const MemoryPollRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&address_, &from.address_,
    static_cast<size_t>(reinterpret_cast<char*>(&interval_) -
    reinterpret_cast<char*>(&address_)) + sizeof(interval_));
  // @@protoc_insertion_point(copy_constructor:mombasa.MemoryPollRequest)
}

void MemoryPollRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&address_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&interval_) -
    reinterpret_cast<char*>(&address_)) + sizeof(interval_));
}

MemoryPollRequest::~MemoryPollRequest() {
  // @@protoc_insertion_point(destructor:mombasa.MemoryPollRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MemoryPollRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MemoryPollRequest::ArenaDtor(void* object) {
  MemoryPollRequest* _this = reinterpret_cast< MemoryPollRequest* >(object);
  (void)_this;
}
void MemoryPollRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MemoryPollRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MemoryPollRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.MemoryPollRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interval_) -
      reinterpret_cast<char*>(&address_)) + sizeof(interval_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MemoryPollRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // fixed64 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          address_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else
          goto handle_unusual;
        continue;
      // uint32 count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 interval = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          interval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MemoryPollRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.MemoryPollRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_address(), target);
  }

  // uint32 count = 2;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_count(), target);
  }

  // uint32 interval = 3;
  if (this->_internal_interval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_interval(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.MemoryPollRequest)
  return target;
}

size_t MemoryPollRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.MemoryPollRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // fixed64 address = 1;
  if (this->_internal_address() != 0) {
    total_size += 1 + 8;
  }

  // uint32 count = 2;
  if (this->_internal_count() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_count());
  }

  // uint32 interval = 3;
  if (this->_internal_interval() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_interval());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MemoryPollRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MemoryPollRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MemoryPollRequest::GetClassData() const { return &_class_data_; }

void MemoryPollRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MemoryPollRequest *>(to)->MergeFrom(
      static_cast<const MemoryPollRequest &>(from));
}


void MemoryPollRequest::MergeFrom(const MemoryPollRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.MemoryPollRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_address() != 0) {
    _internal_set_address(from._internal_address());
  }
  if (from._internal_count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from._internal_interval() != 0) {
    _internal_set_interval(from._internal_interval());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MemoryPollRequest::CopyFrom(const MemoryPollRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.MemoryPollRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryPollRequest::IsInitialized() const {
  return true;
}

void MemoryPollRequest::InternalSwap(MemoryPollRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MemoryPollRequest, interval_)
      + sizeof(MemoryPollRequest::interval_)
      - PROTOBUF_FIELD_OFFSET(MemoryPollRequest, address_)>(
          reinterpret_cast<char*>(&address_),
          reinterpret_cast<char*>(&other->address_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MemoryPollRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[4]);
}

// ===================================================================

class MemoryReadRequest::_Internal {
 public:
};

MemoryReadRequest::MemoryReadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.MemoryReadRequest)
}
MemoryReadRequest::MemoryReadRequest(const MemoryReadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&address_, &from.address_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&address_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:mombasa.MemoryReadRequest)
}

void MemoryReadRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&address_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&address_)) + sizeof(count_));
}

MemoryReadRequest::~MemoryReadRequest() {
  // @@protoc_insertion_point(destructor:mombasa.MemoryReadRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MemoryReadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MemoryReadRequest::ArenaDtor(void* object) {
  MemoryReadRequest* _this = reinterpret_cast< MemoryReadRequest* >(object);
  (void)_this;
}
void MemoryReadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MemoryReadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MemoryReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.MemoryReadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&address_)) + sizeof(count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MemoryReadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // fixed64 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          address_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else
          goto handle_unusual;
        continue;
      // uint32 count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MemoryReadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.MemoryReadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_address(), target);
  }

  // uint32 count = 2;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.MemoryReadRequest)
  return target;
}

size_t MemoryReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.MemoryReadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // fixed64 address = 1;
  if (this->_internal_address() != 0) {
    total_size += 1 + 8;
  }

  // uint32 count = 2;
  if (this->_internal_count() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MemoryReadRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MemoryReadRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MemoryReadRequest::GetClassData() const { return &_class_data_; }

void MemoryReadRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MemoryReadRequest *>(to)->MergeFrom(
      static_cast<const MemoryReadRequest &>(from));
}


void MemoryReadRequest::MergeFrom(const MemoryReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.MemoryReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_address() != 0) {
    _internal_set_address(from._internal_address());
  }
  if (from._internal_count() != 0) {
    _internal_set_count(from._internal_count());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MemoryReadRequest::CopyFrom(const MemoryReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.MemoryReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryReadRequest::IsInitialized() const {
  return true;
}

void MemoryReadRequest::InternalSwap(MemoryReadRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MemoryReadRequest, count_)
      + sizeof(MemoryReadRequest::count_)
      - PROTOBUF_FIELD_OFFSET(MemoryReadRequest, address_)>(
          reinterpret_cast<char*>(&address_),
          reinterpret_cast<char*>(&other->address_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MemoryReadRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[5]);
}

// ===================================================================

class MemoryReadResponse::_Internal {
 public:
};

MemoryReadResponse::MemoryReadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.MemoryReadResponse)
}
MemoryReadResponse::MemoryReadResponse(const MemoryReadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  ::memcpy(&durationmicroseconds_, &from.durationmicroseconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&address_) -
    reinterpret_cast<char*>(&durationmicroseconds_)) + sizeof(address_));
  // @@protoc_insertion_point(copy_constructor:mombasa.MemoryReadResponse)
}

void MemoryReadResponse::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&durationmicroseconds_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&address_) -
    reinterpret_cast<char*>(&durationmicroseconds_)) + sizeof(address_));
}

MemoryReadResponse::~MemoryReadResponse() {
  // @@protoc_insertion_point(destructor:mombasa.MemoryReadResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MemoryReadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MemoryReadResponse::ArenaDtor(void* object) {
  MemoryReadResponse* _this = reinterpret_cast< MemoryReadResponse* >(object);
  (void)_this;
}
void MemoryReadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MemoryReadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MemoryReadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.MemoryReadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  ::memset(&durationmicroseconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&address_) -
      reinterpret_cast<char*>(&durationmicroseconds_)) + sizeof(address_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MemoryReadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 durationMicroseconds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          durationmicroseconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // fixed64 address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          address_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else
          goto handle_unusual;
        continue;
      // bytes data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MemoryReadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.MemoryReadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_durationmicroseconds(), target);
  }

  // fixed64 address = 2;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->_internal_address(), target);
  }

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.MemoryReadResponse)
  return target;
}

size_t MemoryReadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.MemoryReadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_durationmicroseconds());
  }

  // fixed64 address = 2;
  if (this->_internal_address() != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MemoryReadResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MemoryReadResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MemoryReadResponse::GetClassData() const { return &_class_data_; }

void MemoryReadResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MemoryReadResponse *>(to)->MergeFrom(
      static_cast<const MemoryReadResponse &>(from));
}


void MemoryReadResponse::MergeFrom(const MemoryReadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.MemoryReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from._internal_durationmicroseconds() != 0) {
    _internal_set_durationmicroseconds(from._internal_durationmicroseconds());
  }
  if (from._internal_address() != 0) {
    _internal_set_address(from._internal_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MemoryReadResponse::CopyFrom(const MemoryReadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.MemoryReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryReadResponse::IsInitialized() const {
  return true;
}

void MemoryReadResponse::InternalSwap(MemoryReadResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MemoryReadResponse, address_)
      + sizeof(MemoryReadResponse::address_)
      - PROTOBUF_FIELD_OFFSET(MemoryReadResponse, durationmicroseconds_)>(
          reinterpret_cast<char*>(&durationmicroseconds_),
          reinterpret_cast<char*>(&other->durationmicroseconds_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MemoryReadResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[6]);
}

// ===================================================================

class MemoryAllocateRequest::_Internal {
 public:
};

MemoryAllocateRequest::MemoryAllocateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.MemoryAllocateRequest)
}
MemoryAllocateRequest::MemoryAllocateRequest(const MemoryAllocateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&protection_) -
    reinterpret_cast<char*>(&length_)) + sizeof(protection_));
  // @@protoc_insertion_point(copy_constructor:mombasa.MemoryAllocateRequest)
}

void MemoryAllocateRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&length_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&protection_) -
    reinterpret_cast<char*>(&length_)) + sizeof(protection_));
}

MemoryAllocateRequest::~MemoryAllocateRequest() {
  // @@protoc_insertion_point(destructor:mombasa.MemoryAllocateRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MemoryAllocateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MemoryAllocateRequest::ArenaDtor(void* object) {
  MemoryAllocateRequest* _this = reinterpret_cast< MemoryAllocateRequest* >(object);
  (void)_this;
}
void MemoryAllocateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MemoryAllocateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MemoryAllocateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.MemoryAllocateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&protection_) -
      reinterpret_cast<char*>(&length_)) + sizeof(protection_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MemoryAllocateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 length = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 protection = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          protection_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MemoryAllocateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.MemoryAllocateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 length = 1;
  if (this->_internal_length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_length(), target);
  }

  // uint32 protection = 2;
  if (this->_internal_protection() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_protection(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.MemoryAllocateRequest)
  return target;
}

size_t MemoryAllocateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.MemoryAllocateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 length = 1;
  if (this->_internal_length() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_length());
  }

  // uint32 protection = 2;
  if (this->_internal_protection() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_protection());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MemoryAllocateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MemoryAllocateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MemoryAllocateRequest::GetClassData() const { return &_class_data_; }

void MemoryAllocateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MemoryAllocateRequest *>(to)->MergeFrom(
      static_cast<const MemoryAllocateRequest &>(from));
}


void MemoryAllocateRequest::MergeFrom(const MemoryAllocateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.MemoryAllocateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_length() != 0) {
    _internal_set_length(from._internal_length());
  }
  if (from._internal_protection() != 0) {
    _internal_set_protection(from._internal_protection());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MemoryAllocateRequest::CopyFrom(const MemoryAllocateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.MemoryAllocateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryAllocateRequest::IsInitialized() const {
  return true;
}

void MemoryAllocateRequest::InternalSwap(MemoryAllocateRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MemoryAllocateRequest, protection_)
      + sizeof(MemoryAllocateRequest::protection_)
      - PROTOBUF_FIELD_OFFSET(MemoryAllocateRequest, length_)>(
          reinterpret_cast<char*>(&length_),
          reinterpret_cast<char*>(&other->length_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MemoryAllocateRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[7]);
}

// ===================================================================

class MemoryAllocateResponse::_Internal {
 public:
};

MemoryAllocateResponse::MemoryAllocateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.MemoryAllocateResponse)
}
MemoryAllocateResponse::MemoryAllocateResponse(const MemoryAllocateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&durationmicroseconds_, &from.durationmicroseconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&address_) -
    reinterpret_cast<char*>(&durationmicroseconds_)) + sizeof(address_));
  // @@protoc_insertion_point(copy_constructor:mombasa.MemoryAllocateResponse)
}

void MemoryAllocateResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&durationmicroseconds_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&address_) -
    reinterpret_cast<char*>(&durationmicroseconds_)) + sizeof(address_));
}

MemoryAllocateResponse::~MemoryAllocateResponse() {
  // @@protoc_insertion_point(destructor:mombasa.MemoryAllocateResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MemoryAllocateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MemoryAllocateResponse::ArenaDtor(void* object) {
  MemoryAllocateResponse* _this = reinterpret_cast< MemoryAllocateResponse* >(object);
  (void)_this;
}
void MemoryAllocateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MemoryAllocateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MemoryAllocateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.MemoryAllocateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&durationmicroseconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&address_) -
      reinterpret_cast<char*>(&durationmicroseconds_)) + sizeof(address_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MemoryAllocateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 durationMicroseconds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          durationmicroseconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // fixed64 address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          address_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MemoryAllocateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.MemoryAllocateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_durationmicroseconds(), target);
  }

  // fixed64 address = 2;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.MemoryAllocateResponse)
  return target;
}

size_t MemoryAllocateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.MemoryAllocateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_durationmicroseconds());
  }

  // fixed64 address = 2;
  if (this->_internal_address() != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MemoryAllocateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MemoryAllocateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MemoryAllocateResponse::GetClassData() const { return &_class_data_; }

void MemoryAllocateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MemoryAllocateResponse *>(to)->MergeFrom(
      static_cast<const MemoryAllocateResponse &>(from));
}


void MemoryAllocateResponse::MergeFrom(const MemoryAllocateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.MemoryAllocateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_durationmicroseconds() != 0) {
    _internal_set_durationmicroseconds(from._internal_durationmicroseconds());
  }
  if (from._internal_address() != 0) {
    _internal_set_address(from._internal_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MemoryAllocateResponse::CopyFrom(const MemoryAllocateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.MemoryAllocateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryAllocateResponse::IsInitialized() const {
  return true;
}

void MemoryAllocateResponse::InternalSwap(MemoryAllocateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MemoryAllocateResponse, address_)
      + sizeof(MemoryAllocateResponse::address_)
      - PROTOBUF_FIELD_OFFSET(MemoryAllocateResponse, durationmicroseconds_)>(
          reinterpret_cast<char*>(&durationmicroseconds_),
          reinterpret_cast<char*>(&other->durationmicroseconds_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MemoryAllocateResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[8]);
}

// ===================================================================

class MemoryFreeRequest::_Internal {
 public:
};

MemoryFreeRequest::MemoryFreeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.MemoryFreeRequest)
}
MemoryFreeRequest::MemoryFreeRequest(const MemoryFreeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&address_, &from.address_,
    static_cast<size_t>(reinterpret_cast<char*>(&freetype_) -
    reinterpret_cast<char*>(&address_)) + sizeof(freetype_));
  // @@protoc_insertion_point(copy_constructor:mombasa.MemoryFreeRequest)
}

void MemoryFreeRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&address_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&freetype_) -
    reinterpret_cast<char*>(&address_)) + sizeof(freetype_));
}

MemoryFreeRequest::~MemoryFreeRequest() {
  // @@protoc_insertion_point(destructor:mombasa.MemoryFreeRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MemoryFreeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MemoryFreeRequest::ArenaDtor(void* object) {
  MemoryFreeRequest* _this = reinterpret_cast< MemoryFreeRequest* >(object);
  (void)_this;
}
void MemoryFreeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MemoryFreeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MemoryFreeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.MemoryFreeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&freetype_) -
      reinterpret_cast<char*>(&address_)) + sizeof(freetype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MemoryFreeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // fixed64 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          address_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else
          goto handle_unusual;
        continue;
      // uint32 length = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 freeType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          freetype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MemoryFreeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.MemoryFreeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_address(), target);
  }

  // uint32 length = 2;
  if (this->_internal_length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_length(), target);
  }

  // uint32 freeType = 3;
  if (this->_internal_freetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_freetype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.MemoryFreeRequest)
  return target;
}

size_t MemoryFreeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.MemoryFreeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // fixed64 address = 1;
  if (this->_internal_address() != 0) {
    total_size += 1 + 8;
  }

  // uint32 length = 2;
  if (this->_internal_length() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_length());
  }

  // uint32 freeType = 3;
  if (this->_internal_freetype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_freetype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MemoryFreeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MemoryFreeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MemoryFreeRequest::GetClassData() const { return &_class_data_; }

void MemoryFreeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MemoryFreeRequest *>(to)->MergeFrom(
      static_cast<const MemoryFreeRequest &>(from));
}


void MemoryFreeRequest::MergeFrom(const MemoryFreeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.MemoryFreeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_address() != 0) {
    _internal_set_address(from._internal_address());
  }
  if (from._internal_length() != 0) {
    _internal_set_length(from._internal_length());
  }
  if (from._internal_freetype() != 0) {
    _internal_set_freetype(from._internal_freetype());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MemoryFreeRequest::CopyFrom(const MemoryFreeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.MemoryFreeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryFreeRequest::IsInitialized() const {
  return true;
}

void MemoryFreeRequest::InternalSwap(MemoryFreeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MemoryFreeRequest, freetype_)
      + sizeof(MemoryFreeRequest::freetype_)
      - PROTOBUF_FIELD_OFFSET(MemoryFreeRequest, address_)>(
          reinterpret_cast<char*>(&address_),
          reinterpret_cast<char*>(&other->address_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MemoryFreeRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[9]);
}

// ===================================================================

class MemoryFreeResponse::_Internal {
 public:
};

MemoryFreeResponse::MemoryFreeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.MemoryFreeResponse)
}
MemoryFreeResponse::MemoryFreeResponse(const MemoryFreeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  durationmicroseconds_ = from.durationmicroseconds_;
  // @@protoc_insertion_point(copy_constructor:mombasa.MemoryFreeResponse)
}

void MemoryFreeResponse::SharedCtor() {
durationmicroseconds_ = uint64_t{0u};
}

MemoryFreeResponse::~MemoryFreeResponse() {
  // @@protoc_insertion_point(destructor:mombasa.MemoryFreeResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MemoryFreeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MemoryFreeResponse::ArenaDtor(void* object) {
  MemoryFreeResponse* _this = reinterpret_cast< MemoryFreeResponse* >(object);
  (void)_this;
}
void MemoryFreeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MemoryFreeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MemoryFreeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.MemoryFreeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  durationmicroseconds_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MemoryFreeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 durationMicroseconds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          durationmicroseconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MemoryFreeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.MemoryFreeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_durationmicroseconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.MemoryFreeResponse)
  return target;
}

size_t MemoryFreeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.MemoryFreeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_durationmicroseconds());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MemoryFreeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MemoryFreeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MemoryFreeResponse::GetClassData() const { return &_class_data_; }

void MemoryFreeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MemoryFreeResponse *>(to)->MergeFrom(
      static_cast<const MemoryFreeResponse &>(from));
}


void MemoryFreeResponse::MergeFrom(const MemoryFreeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.MemoryFreeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_durationmicroseconds() != 0) {
    _internal_set_durationmicroseconds(from._internal_durationmicroseconds());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MemoryFreeResponse::CopyFrom(const MemoryFreeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.MemoryFreeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryFreeResponse::IsInitialized() const {
  return true;
}

void MemoryFreeResponse::InternalSwap(MemoryFreeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(durationmicroseconds_, other->durationmicroseconds_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MemoryFreeResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[10]);
}

// ===================================================================

class MemoryProtectRequest::_Internal {
 public:
};

MemoryProtectRequest::MemoryProtectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.MemoryProtectRequest)
}
MemoryProtectRequest::MemoryProtectRequest(const MemoryProtectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&address_, &from.address_,
    static_cast<size_t>(reinterpret_cast<char*>(&protection_) -
    reinterpret_cast<char*>(&address_)) + sizeof(protection_));
  // @@protoc_insertion_point(copy_constructor:mombasa.MemoryProtectRequest)
}

void MemoryProtectRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&address_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&protection_) -
    reinterpret_cast<char*>(&address_)) + sizeof(protection_));
}

MemoryProtectRequest::~MemoryProtectRequest() {
  // @@protoc_insertion_point(destructor:mombasa.MemoryProtectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MemoryProtectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MemoryProtectRequest::ArenaDtor(void* object) {
  MemoryProtectRequest* _this = reinterpret_cast< MemoryProtectRequest* >(object);
  (void)_this;
}
void MemoryProtectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MemoryProtectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MemoryProtectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.MemoryProtectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&protection_) -
      reinterpret_cast<char*>(&address_)) + sizeof(protection_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MemoryProtectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // fixed64 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          address_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else
          goto handle_unusual;
        continue;
      // uint32 length = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 protection = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          protection_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MemoryProtectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.MemoryProtectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_address(), target);
  }

  // uint32 length = 2;
  if (this->_internal_length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_length(), target);
  }

  // uint32 protection = 3;
  if (this->_internal_protection() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_protection(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.MemoryProtectRequest)
  return target;
}

size_t MemoryProtectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.MemoryProtectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // fixed64 address = 1;
  if (this->_internal_address() != 0) {
    total_size += 1 + 8;
  }

  // uint32 length = 2;
  if (this->_internal_length() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_length());
  }

  // uint32 protection = 3;
  if (this->_internal_protection() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_protection());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MemoryProtectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MemoryProtectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MemoryProtectRequest::GetClassData() const { return &_class_data_; }

void MemoryProtectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MemoryProtectRequest *>(to)->MergeFrom(
      static_cast<const MemoryProtectRequest &>(from));
}


void MemoryProtectRequest::MergeFrom(const MemoryProtectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.MemoryProtectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_address() != 0) {
    _internal_set_address(from._internal_address());
  }
  if (from._internal_length() != 0) {
    _internal_set_length(from._internal_length());
  }
  if (from._internal_protection() != 0) {
    _internal_set_protection(from._internal_protection());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MemoryProtectRequest::CopyFrom(const MemoryProtectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.MemoryProtectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryProtectRequest::IsInitialized() const {
  return true;
}

void MemoryProtectRequest::InternalSwap(MemoryProtectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MemoryProtectRequest, protection_)
      + sizeof(MemoryProtectRequest::protection_)
      - PROTOBUF_FIELD_OFFSET(MemoryProtectRequest, address_)>(
          reinterpret_cast<char*>(&address_),
          reinterpret_cast<char*>(&other->address_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MemoryProtectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[11]);
}

// ===================================================================

class MemoryProtectResponse::_Internal {
 public:
};

MemoryProtectResponse::MemoryProtectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.MemoryProtectResponse)
}
MemoryProtectResponse::MemoryProtectResponse(const MemoryProtectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  durationmicroseconds_ = from.durationmicroseconds_;
  // @@protoc_insertion_point(copy_constructor:mombasa.MemoryProtectResponse)
}

void MemoryProtectResponse::SharedCtor() {
durationmicroseconds_ = uint64_t{0u};
}

MemoryProtectResponse::~MemoryProtectResponse() {
  // @@protoc_insertion_point(destructor:mombasa.MemoryProtectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MemoryProtectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MemoryProtectResponse::ArenaDtor(void* object) {
  MemoryProtectResponse* _this = reinterpret_cast< MemoryProtectResponse* >(object);
  (void)_this;
}
void MemoryProtectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MemoryProtectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MemoryProtectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.MemoryProtectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  durationmicroseconds_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MemoryProtectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 durationMicroseconds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          durationmicroseconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MemoryProtectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.MemoryProtectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_durationmicroseconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.MemoryProtectResponse)
  return target;
}

size_t MemoryProtectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.MemoryProtectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_durationmicroseconds());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MemoryProtectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MemoryProtectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MemoryProtectResponse::GetClassData() const { return &_class_data_; }

void MemoryProtectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MemoryProtectResponse *>(to)->MergeFrom(
      static_cast<const MemoryProtectResponse &>(from));
}


void MemoryProtectResponse::MergeFrom(const MemoryProtectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.MemoryProtectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_durationmicroseconds() != 0) {
    _internal_set_durationmicroseconds(from._internal_durationmicroseconds());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MemoryProtectResponse::CopyFrom(const MemoryProtectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.MemoryProtectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryProtectResponse::IsInitialized() const {
  return true;
}

void MemoryProtectResponse::InternalSwap(MemoryProtectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(durationmicroseconds_, other->durationmicroseconds_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MemoryProtectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[12]);
}

// ===================================================================

class SetTlsValueRequest::_Internal {
 public:
};

SetTlsValueRequest::SetTlsValueRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.SetTlsValueRequest)
}
SetTlsValueRequest::SetTlsValueRequest(const SetTlsValueRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&value_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:mombasa.SetTlsValueRequest)
}

void SetTlsValueRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&value_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&value_)) + sizeof(index_));
}

SetTlsValueRequest::~SetTlsValueRequest() {
  // @@protoc_insertion_point(destructor:mombasa.SetTlsValueRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetTlsValueRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetTlsValueRequest::ArenaDtor(void* object) {
  SetTlsValueRequest* _this = reinterpret_cast< SetTlsValueRequest* >(object);
  (void)_this;
}
void SetTlsValueRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetTlsValueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetTlsValueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.SetTlsValueRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&value_)) + sizeof(index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetTlsValueRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // fixed64 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetTlsValueRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.SetTlsValueRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_index(), target);
  }

  // fixed64 value = 2;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.SetTlsValueRequest)
  return target;
}

size_t SetTlsValueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.SetTlsValueRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // fixed64 value = 2;
  if (this->_internal_value() != 0) {
    total_size += 1 + 8;
  }

  // uint32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetTlsValueRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetTlsValueRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetTlsValueRequest::GetClassData() const { return &_class_data_; }

void SetTlsValueRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetTlsValueRequest *>(to)->MergeFrom(
      static_cast<const SetTlsValueRequest &>(from));
}


void SetTlsValueRequest::MergeFrom(const SetTlsValueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.SetTlsValueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  if (from._internal_index() != 0) {
    _internal_set_index(from._internal_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetTlsValueRequest::CopyFrom(const SetTlsValueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.SetTlsValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTlsValueRequest::IsInitialized() const {
  return true;
}

void SetTlsValueRequest::InternalSwap(SetTlsValueRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetTlsValueRequest, index_)
      + sizeof(SetTlsValueRequest::index_)
      - PROTOBUF_FIELD_OFFSET(SetTlsValueRequest, value_)>(
          reinterpret_cast<char*>(&value_),
          reinterpret_cast<char*>(&other->value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetTlsValueRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[13]);
}

// ===================================================================

class SetTlsValueResponse::_Internal {
 public:
};

SetTlsValueResponse::SetTlsValueResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.SetTlsValueResponse)
}
SetTlsValueResponse::SetTlsValueResponse(const SetTlsValueResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  durationmicroseconds_ = from.durationmicroseconds_;
  // @@protoc_insertion_point(copy_constructor:mombasa.SetTlsValueResponse)
}

void SetTlsValueResponse::SharedCtor() {
durationmicroseconds_ = uint64_t{0u};
}

SetTlsValueResponse::~SetTlsValueResponse() {
  // @@protoc_insertion_point(destructor:mombasa.SetTlsValueResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetTlsValueResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetTlsValueResponse::ArenaDtor(void* object) {
  SetTlsValueResponse* _this = reinterpret_cast< SetTlsValueResponse* >(object);
  (void)_this;
}
void SetTlsValueResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetTlsValueResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetTlsValueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.SetTlsValueResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  durationmicroseconds_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetTlsValueResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 durationMicroseconds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          durationmicroseconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetTlsValueResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.SetTlsValueResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_durationmicroseconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.SetTlsValueResponse)
  return target;
}

size_t SetTlsValueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.SetTlsValueResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_durationmicroseconds());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetTlsValueResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetTlsValueResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetTlsValueResponse::GetClassData() const { return &_class_data_; }

void SetTlsValueResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetTlsValueResponse *>(to)->MergeFrom(
      static_cast<const SetTlsValueResponse &>(from));
}


void SetTlsValueResponse::MergeFrom(const SetTlsValueResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.SetTlsValueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_durationmicroseconds() != 0) {
    _internal_set_durationmicroseconds(from._internal_durationmicroseconds());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetTlsValueResponse::CopyFrom(const SetTlsValueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.SetTlsValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTlsValueResponse::IsInitialized() const {
  return true;
}

void SetTlsValueResponse::InternalSwap(SetTlsValueResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(durationmicroseconds_, other->durationmicroseconds_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetTlsValueResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[14]);
}

// ===================================================================

class SetThreadLocalPointerRequest::_Internal {
 public:
};

SetThreadLocalPointerRequest::SetThreadLocalPointerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.SetThreadLocalPointerRequest)
}
SetThreadLocalPointerRequest::SetThreadLocalPointerRequest(const SetThreadLocalPointerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:mombasa.SetThreadLocalPointerRequest)
}

void SetThreadLocalPointerRequest::SharedCtor() {
value_ = uint64_t{0u};
}

SetThreadLocalPointerRequest::~SetThreadLocalPointerRequest() {
  // @@protoc_insertion_point(destructor:mombasa.SetThreadLocalPointerRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetThreadLocalPointerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetThreadLocalPointerRequest::ArenaDtor(void* object) {
  SetThreadLocalPointerRequest* _this = reinterpret_cast< SetThreadLocalPointerRequest* >(object);
  (void)_this;
}
void SetThreadLocalPointerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetThreadLocalPointerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetThreadLocalPointerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.SetThreadLocalPointerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetThreadLocalPointerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // fixed64 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetThreadLocalPointerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.SetThreadLocalPointerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.SetThreadLocalPointerRequest)
  return target;
}

size_t SetThreadLocalPointerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.SetThreadLocalPointerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // fixed64 value = 1;
  if (this->_internal_value() != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetThreadLocalPointerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetThreadLocalPointerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetThreadLocalPointerRequest::GetClassData() const { return &_class_data_; }

void SetThreadLocalPointerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetThreadLocalPointerRequest *>(to)->MergeFrom(
      static_cast<const SetThreadLocalPointerRequest &>(from));
}


void SetThreadLocalPointerRequest::MergeFrom(const SetThreadLocalPointerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.SetThreadLocalPointerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetThreadLocalPointerRequest::CopyFrom(const SetThreadLocalPointerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.SetThreadLocalPointerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetThreadLocalPointerRequest::IsInitialized() const {
  return true;
}

void SetThreadLocalPointerRequest::InternalSwap(SetThreadLocalPointerRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetThreadLocalPointerRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[15]);
}

// ===================================================================

class SetThreadLocalPointerResponse::_Internal {
 public:
};

SetThreadLocalPointerResponse::SetThreadLocalPointerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.SetThreadLocalPointerResponse)
}
SetThreadLocalPointerResponse::SetThreadLocalPointerResponse(const SetThreadLocalPointerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  durationmicroseconds_ = from.durationmicroseconds_;
  // @@protoc_insertion_point(copy_constructor:mombasa.SetThreadLocalPointerResponse)
}

void SetThreadLocalPointerResponse::SharedCtor() {
durationmicroseconds_ = uint64_t{0u};
}

SetThreadLocalPointerResponse::~SetThreadLocalPointerResponse() {
  // @@protoc_insertion_point(destructor:mombasa.SetThreadLocalPointerResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetThreadLocalPointerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetThreadLocalPointerResponse::ArenaDtor(void* object) {
  SetThreadLocalPointerResponse* _this = reinterpret_cast< SetThreadLocalPointerResponse* >(object);
  (void)_this;
}
void SetThreadLocalPointerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetThreadLocalPointerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetThreadLocalPointerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.SetThreadLocalPointerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  durationmicroseconds_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetThreadLocalPointerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 durationMicroseconds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          durationmicroseconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetThreadLocalPointerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.SetThreadLocalPointerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_durationmicroseconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.SetThreadLocalPointerResponse)
  return target;
}

size_t SetThreadLocalPointerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.SetThreadLocalPointerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_durationmicroseconds());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetThreadLocalPointerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetThreadLocalPointerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetThreadLocalPointerResponse::GetClassData() const { return &_class_data_; }

void SetThreadLocalPointerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetThreadLocalPointerResponse *>(to)->MergeFrom(
      static_cast<const SetThreadLocalPointerResponse &>(from));
}


void SetThreadLocalPointerResponse::MergeFrom(const SetThreadLocalPointerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.SetThreadLocalPointerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_durationmicroseconds() != 0) {
    _internal_set_durationmicroseconds(from._internal_durationmicroseconds());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetThreadLocalPointerResponse::CopyFrom(const SetThreadLocalPointerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.SetThreadLocalPointerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetThreadLocalPointerResponse::IsInitialized() const {
  return true;
}

void SetThreadLocalPointerResponse::InternalSwap(SetThreadLocalPointerResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(durationmicroseconds_, other->durationmicroseconds_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetThreadLocalPointerResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[16]);
}

// ===================================================================

class GetThreadLocalPointerRequest::_Internal {
 public:
};

GetThreadLocalPointerRequest::GetThreadLocalPointerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.GetThreadLocalPointerRequest)
}
GetThreadLocalPointerRequest::GetThreadLocalPointerRequest(const GetThreadLocalPointerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  why_ = from.why_;
  // @@protoc_insertion_point(copy_constructor:mombasa.GetThreadLocalPointerRequest)
}

void GetThreadLocalPointerRequest::SharedCtor() {
why_ = uint64_t{0u};
}

GetThreadLocalPointerRequest::~GetThreadLocalPointerRequest() {
  // @@protoc_insertion_point(destructor:mombasa.GetThreadLocalPointerRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetThreadLocalPointerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetThreadLocalPointerRequest::ArenaDtor(void* object) {
  GetThreadLocalPointerRequest* _this = reinterpret_cast< GetThreadLocalPointerRequest* >(object);
  (void)_this;
}
void GetThreadLocalPointerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetThreadLocalPointerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetThreadLocalPointerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.GetThreadLocalPointerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  why_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetThreadLocalPointerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 why = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          why_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetThreadLocalPointerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.GetThreadLocalPointerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 why = 1;
  if (this->_internal_why() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_why(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.GetThreadLocalPointerRequest)
  return target;
}

size_t GetThreadLocalPointerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.GetThreadLocalPointerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 why = 1;
  if (this->_internal_why() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_why());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetThreadLocalPointerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetThreadLocalPointerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetThreadLocalPointerRequest::GetClassData() const { return &_class_data_; }

void GetThreadLocalPointerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetThreadLocalPointerRequest *>(to)->MergeFrom(
      static_cast<const GetThreadLocalPointerRequest &>(from));
}


void GetThreadLocalPointerRequest::MergeFrom(const GetThreadLocalPointerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.GetThreadLocalPointerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_why() != 0) {
    _internal_set_why(from._internal_why());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetThreadLocalPointerRequest::CopyFrom(const GetThreadLocalPointerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.GetThreadLocalPointerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetThreadLocalPointerRequest::IsInitialized() const {
  return true;
}

void GetThreadLocalPointerRequest::InternalSwap(GetThreadLocalPointerRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(why_, other->why_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetThreadLocalPointerRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[17]);
}

// ===================================================================

class GetThreadLocalPointerResponse::_Internal {
 public:
};

GetThreadLocalPointerResponse::GetThreadLocalPointerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:mombasa.GetThreadLocalPointerResponse)
}
GetThreadLocalPointerResponse::GetThreadLocalPointerResponse(const GetThreadLocalPointerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&durationmicroseconds_, &from.durationmicroseconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&durationmicroseconds_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:mombasa.GetThreadLocalPointerResponse)
}

void GetThreadLocalPointerResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&durationmicroseconds_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&durationmicroseconds_)) + sizeof(value_));
}

GetThreadLocalPointerResponse::~GetThreadLocalPointerResponse() {
  // @@protoc_insertion_point(destructor:mombasa.GetThreadLocalPointerResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetThreadLocalPointerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetThreadLocalPointerResponse::ArenaDtor(void* object) {
  GetThreadLocalPointerResponse* _this = reinterpret_cast< GetThreadLocalPointerResponse* >(object);
  (void)_this;
}
void GetThreadLocalPointerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetThreadLocalPointerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetThreadLocalPointerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mombasa.GetThreadLocalPointerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&durationmicroseconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&durationmicroseconds_)) + sizeof(value_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetThreadLocalPointerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 durationMicroseconds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          durationmicroseconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // fixed64 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetThreadLocalPointerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mombasa.GetThreadLocalPointerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_durationmicroseconds(), target);
  }

  // fixed64 value = 2;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mombasa.GetThreadLocalPointerResponse)
  return target;
}

size_t GetThreadLocalPointerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mombasa.GetThreadLocalPointerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 durationMicroseconds = 1;
  if (this->_internal_durationmicroseconds() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_durationmicroseconds());
  }

  // fixed64 value = 2;
  if (this->_internal_value() != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetThreadLocalPointerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetThreadLocalPointerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetThreadLocalPointerResponse::GetClassData() const { return &_class_data_; }

void GetThreadLocalPointerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetThreadLocalPointerResponse *>(to)->MergeFrom(
      static_cast<const GetThreadLocalPointerResponse &>(from));
}


void GetThreadLocalPointerResponse::MergeFrom(const GetThreadLocalPointerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mombasa.GetThreadLocalPointerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_durationmicroseconds() != 0) {
    _internal_set_durationmicroseconds(from._internal_durationmicroseconds());
  }
  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetThreadLocalPointerResponse::CopyFrom(const GetThreadLocalPointerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mombasa.GetThreadLocalPointerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetThreadLocalPointerResponse::IsInitialized() const {
  return true;
}

void GetThreadLocalPointerResponse::InternalSwap(GetThreadLocalPointerResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetThreadLocalPointerResponse, value_)
      + sizeof(GetThreadLocalPointerResponse::value_)
      - PROTOBUF_FIELD_OFFSET(GetThreadLocalPointerResponse, durationmicroseconds_)>(
          reinterpret_cast<char*>(&durationmicroseconds_),
          reinterpret_cast<char*>(&other->durationmicroseconds_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetThreadLocalPointerResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mombasa_2eproto_getter, &descriptor_table_mombasa_2eproto_once,
      file_level_metadata_mombasa_2eproto[18]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace mombasa
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mombasa::CallRequest* Arena::CreateMaybeMessage< ::mombasa::CallRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::CallRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::CallResponse* Arena::CreateMaybeMessage< ::mombasa::CallResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::CallResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::MemoryWriteRequest* Arena::CreateMaybeMessage< ::mombasa::MemoryWriteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::MemoryWriteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::MemoryWriteResponse* Arena::CreateMaybeMessage< ::mombasa::MemoryWriteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::MemoryWriteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::MemoryPollRequest* Arena::CreateMaybeMessage< ::mombasa::MemoryPollRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::MemoryPollRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::MemoryReadRequest* Arena::CreateMaybeMessage< ::mombasa::MemoryReadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::MemoryReadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::MemoryReadResponse* Arena::CreateMaybeMessage< ::mombasa::MemoryReadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::MemoryReadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::MemoryAllocateRequest* Arena::CreateMaybeMessage< ::mombasa::MemoryAllocateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::MemoryAllocateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::MemoryAllocateResponse* Arena::CreateMaybeMessage< ::mombasa::MemoryAllocateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::MemoryAllocateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::MemoryFreeRequest* Arena::CreateMaybeMessage< ::mombasa::MemoryFreeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::MemoryFreeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::MemoryFreeResponse* Arena::CreateMaybeMessage< ::mombasa::MemoryFreeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::MemoryFreeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::MemoryProtectRequest* Arena::CreateMaybeMessage< ::mombasa::MemoryProtectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::MemoryProtectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::MemoryProtectResponse* Arena::CreateMaybeMessage< ::mombasa::MemoryProtectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::MemoryProtectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::SetTlsValueRequest* Arena::CreateMaybeMessage< ::mombasa::SetTlsValueRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::SetTlsValueRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::SetTlsValueResponse* Arena::CreateMaybeMessage< ::mombasa::SetTlsValueResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::SetTlsValueResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::SetThreadLocalPointerRequest* Arena::CreateMaybeMessage< ::mombasa::SetThreadLocalPointerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::SetThreadLocalPointerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::SetThreadLocalPointerResponse* Arena::CreateMaybeMessage< ::mombasa::SetThreadLocalPointerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::SetThreadLocalPointerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::GetThreadLocalPointerRequest* Arena::CreateMaybeMessage< ::mombasa::GetThreadLocalPointerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::GetThreadLocalPointerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mombasa::GetThreadLocalPointerResponse* Arena::CreateMaybeMessage< ::mombasa::GetThreadLocalPointerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mombasa::GetThreadLocalPointerResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
