syntax = "proto3";
package mombasa;

service MombasaBridge {
    rpc CallFunction(CallRequest) returns (CallResponse);

    rpc AllocateMemory(MemoryAllocateRequest) returns (MemoryAllocateResponse);
    rpc FreeMemory(MemoryFreeRequest) returns (MemoryFreeResponse);
    rpc ProtectMemory(MemoryProtectRequest) returns (MemoryProtectResponse);

    rpc WriteMemory(MemoryWriteRequest) returns (MemoryWriteResponse);
    rpc ReadMemory(MemoryReadRequest) returns (MemoryReadResponse);

    rpc PollMemory(MemoryPollRequest) returns (stream MemoryReadResponse);

    rpc SetTlsValue(SetTlsValueRequest) returns (SetTlsValueResponse);
}

message CallRequest {
    fixed64 functionPointer = 1;
    repeated fixed64 args = 2;
    bool returnsFloat = 3;
}

message CallResponse {
    uint64 durationMicroseconds = 1;
    bool success = 2;
    fixed64 value = 3;
}

message MemoryWriteRequest {
    fixed64 address = 1;
    bytes data = 2;
}

message MemoryWriteResponse {
    uint64 durationMicroseconds = 1;
}

message MemoryPollRequest {
    fixed64 address = 1;
    uint32 count = 2;
    uint32 interval = 3;
}

message MemoryReadRequest {
    fixed64 address = 1;
    uint32 count = 2;
}

message MemoryReadResponse {
    uint64 durationMicroseconds = 1;
    fixed64 address = 2;
    bytes data = 3;
}

message MemoryAllocateRequest {
    uint32 length = 1;
    uint32 protection = 2;
}

message MemoryAllocateResponse {
    uint64 durationMicroseconds = 1;
    fixed64 address = 2;
}

message MemoryFreeRequest {
    fixed64 address = 1;
    uint32 length = 2;
    uint32 freeType = 3;
}

message MemoryFreeResponse {
    uint64 durationMicroseconds = 1;
}

message MemoryProtectRequest {
    fixed64 address = 1;
    uint32 length = 2;
    uint32 protection = 3;
}

message MemoryProtectResponse {
    uint64 durationMicroseconds = 1;
}

message SetTlsValueRequest {
    uint32 index = 1;
    fixed64 value = 2;
}

message SetTlsValueResponse {
    uint64 durationMicroseconds = 1;
}