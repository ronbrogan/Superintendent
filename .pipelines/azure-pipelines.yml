trigger:
- main

variables:
  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/src'
  vcpkgExportVersion: 'vcpkg-export-20220212-202727'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool: 'Homelab'

    steps:
    - checkout: self
      submodules: true
        
    - task: PowerShell@2
      displayName: 'Setup VCPKG'
      inputs:
        targetType: 'inline'
        script: |
          vcpkg integrate install

    - task: VSBuild@1
      inputs:
        solution: '$(workingDirectory)\Superintendent.Mombasa\Superintendent.Mombasa.vcxproj'
        vsVersion: 'latest'
        platform: 'x64'
        configuration: 'Release'
        msbuildArchitecture: 'x64'
        createLogFile: true
         
    - task: UseDotNet@2
      displayName: 'Use .NET 8 sdk'
      inputs:
        packageType: sdk
        version: 8.0.x
        
    - task: UseDotNet@2
      displayName: 'Use .NET 6 sdk for signtool'
      inputs:
        packageType: sdk
        version: 6.0.x
        
    - task: DotNetCoreCLI@2
      displayName: 'Install Dotnet Sign Tool'
      inputs:
        command: custom
        custom: tool
        arguments: 'install --tool-path . sign --version 0.9.1-beta.24123.2'
        
    - task: DotNetCoreCLI@2
      displayName: Test Superintendent.Core
      inputs:
        command: 'test'
        projects: '$(workingDirectory)/Superintendent.Core.Tests/Superintendent.Core.Tests.csproj'

        
    - task: DotNetCoreCLI@2
      displayName: Pack Superintendent.Core NuGet
      inputs:
        command: 'pack'
        packagesToPack: '$(workingDirectory)/Superintendent.Core/Superintendent.Core.csproj'
        configuration: 'Release'
        versioningScheme: 'off'
        
    - task: DotNetCoreCLI@2
      displayName: Pack Superintendent.Generation NuGet
      inputs:
        command: 'pack'
        packagesToPack: '$(workingDirectory)/Superintendent.Generation/Superintendent.Generation.csproj'
        configuration: 'Release'
        versioningScheme: 'off'

        
    - task: PowerShell@2
      displayName: 'Sign Superintendent Packages'
      condition: ne(variables.AzureKeyVaultClientSecret, '')
      inputs:
        targetType: 'inline'
        script: |
          ./sign.exe code azure-key-vault "$(Build.ArtifactStagingDirectory)/**/*.nupkg" `
          --azure-key-vault-url "$(AzureKeyVaultUrl)" `
          --azure-key-vault-tenant-id "$(AzureKeyVaultTenantId)" `
          --azure-key-vault-client-id "$(AzureKeyVaultClientId)" `
          --azure-key-vault-client-secret "$(AzureKeyVaultClientSecret)" `
          --azure-key-vault-certificate "$(AzureKeyVaultCert)" `
          --timestamp-url http://timestamp.digicert.com 
        

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: drop