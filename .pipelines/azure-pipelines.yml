trigger:
- main

variables:
  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/src'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: 'windows-2022'

    steps:
    - task: PowerShell@2
      displayName: 'Download Native Dependencies'
      inputs:
        targetType: 'inline'
        script: |
          Import-Module BitsTransfer
          write-host "Starting download"
          Start-BitsTransfer -Source https://openblam.blob.core.windows.net/nuget/vcpkg-export-20220212-202727.zip -Destination $(Build.BinariesDirectory)/deps.zip
          write-host "Unzipping"
          expand-archive -Path $(Build.BinariesDirectory)/deps.zip  -DestinationPath $(Build.BinariesDirectory)
          ls

    - task: run-vcpkg@0
      inputs:
        vcpkgSetupOnly: true
        vcpkgGitCommitId: '2022.02.02'
        vcpkgTriplet: 'x64-windows-static'
        vcpkgArguments: 'spdlog'

    - task: VSBuild@1
      inputs:
        solution: '$(workingDirectory)\Superintendent.Mombasa\Superintendent.Mombasa.vcxproj'
        vsVersion: '17.0'
        msbuildArgs: '/p:VcpkgEnableManifest=false /p:VCPKG_INSTALLATION_ROOT="$(Build.BinariesDirectory)\vcpkg-export-20220212-202727" /p:ForceImportBeforeCppProps="$(Build.BinariesDirectory)\vcpkg-export-20220212-202727\scripts\buildsystems\msbuild\vcpkg.props" /p:ForceImportAfterCppTargets="$(Build.BinariesDirectory)\vcpkg-export-20220212-202727\scripts\buildsystems\msbuild\vcpkg.targets"'
        platform: 'x64'
        configuration: 'Release'
        msbuildArchitecture: 'x64'
        createLogFile: true
         
    - task: UseDotNet@2
      displayName: 'Use .NET 6 sdk'
      inputs:
        packageType: sdk
        version: 6.0.x

    - task: DotNetCoreCLI@2
      displayName: Pack Superintendent.Core NuGet
      inputs:
        command: 'pack'
        projects: '$(workingDirectory)/Superintendent.Core/Superintendent.Core.csproj'
        arguments: --configuration Release --output $(Build.ArtifactStagingDirectory)

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: drop